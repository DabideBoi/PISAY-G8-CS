{
    "title": "C++ Arrays (1D & 2D) Quiz",
    "description": "Test your knowledge of one-dimensional and two-dimensional arrays in C++!",
    "questions": [
        {
            "question": "How do you declare an integer array of size 5 in C++?",
            "code": "// Which is the correct declaration?",
            "options": ["int numbers[5];", "array<int> numbers(5);"],
            "correctIndex": 0,
            "explanation": "The correct way to declare an array of integers with size 5 is 'int numbers[5];'. This allocates memory for 5 integers."
        },
        {
            "question": "What is the index of the first element in a C++ array?",
            "code": "int numbers[5] = {10, 20, 30, 40, 50};",
            "options": ["0", "1"],
            "correctIndex": 0,
            "explanation": "In C++, array indices start at 0. So the first element is at index 0, the second at index 1, and so on."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[5] = {10, 20, 30, 40, 50};\n    cout << arr[2];\n    return 0;\n}",
            "options": ["20", "30"],
            "correctIndex": 1,
            "explanation": "arr[2] refers to the element at index 2, which is the third element (30)."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[5] = {10, 20, 30, 40, 50};\n    arr[1] = 25;\n    cout << arr[1];\n    return 0;\n}",
            "options": ["20", "25"],
            "correctIndex": 1,
            "explanation": "The code assigns 25 to arr[1], replacing the original value 20. So arr[1] becomes 25."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[5] = {10, 20, 30, 40, 50};\n    cout << sizeof(arr) / sizeof(arr[0]);\n    return 0;\n}",
            "options": ["5", "20"],
            "correctIndex": 0,
            "explanation": "sizeof(arr) gives the total size of the array in bytes. sizeof(arr[0]) gives the size of one element. Dividing the total size by the size of one element gives the number of elements, which is 5."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[5] = {10, 20};\n    cout << arr[2];\n    return 0;\n}",
            "options": ["0", "Garbage value"],
            "correctIndex": 0,
            "explanation": "When an array is partially initialized, the remaining elements are automatically initialized to 0. So arr[2] is 0."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[] = {10, 20, 30, 40, 50};\n    cout << arr[4];\n    return 0;\n}",
            "options": ["40", "50"],
            "correctIndex": 1,
            "explanation": "When the array size is not specified, it is determined by the number of initializers. arr[4] refers to the fifth element, which is 50."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[3][2] = {{1, 2}, {3, 4}, {5, 6}};\n    cout << arr[1][1];\n    return 0;\n}",
            "options": ["4", "5"],
            "correctIndex": 0,
            "explanation": "arr[1][1] refers to the element at row 1, column 1, which is 4."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[3][2] = {{1, 2}, {3, 4}, {5, 6}};\n    cout << arr[2][0];\n    return 0;\n}",
            "options": ["5", "6"],
            "correctIndex": 0,
            "explanation": "arr[2][0] refers to the element at row 2, column 0, which is 5."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[3][2] = {{1, 2}, {3, 4}, {5, 6}};\n    arr[0][1] = 10;\n    cout << arr[0][1];\n    return 0;\n}",
            "options": ["2", "10"],
            "correctIndex": 1,
            "explanation": "The code assigns 10 to arr[0][1], replacing the original value 2. So arr[0][1] becomes 10."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[5] = {10, 20, 30, 40, 50};\n    int sum = 0;\n    for(int i = 0; i < 5; i++) {\n        sum += arr[i];\n    }\n    cout << sum;\n    return 0;\n}",
            "options": ["150", "100"],
            "correctIndex": 0,
            "explanation": "The code calculates the sum of all elements in the array: 10 + 20 + 30 + 40 + 50 = 150."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[5] = {30, 10, 50, 20, 40};\n    int max = arr[0];\n    for(int i = 1; i < 5; i++) {\n        if(arr[i] > max) {\n            max = arr[i];\n        }\n    }\n    cout << max;\n    return 0;\n}",
            "options": ["50", "40"],
            "correctIndex": 0,
            "explanation": "The code finds the maximum element in the array, which is 50."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[2][3] = {{1, 2, 3}, {4, 5, 6}};\n    int sum = 0;\n    for(int i = 0; i < 2; i++) {\n        for(int j = 0; j < 3; j++) {\n            sum += arr[i][j];\n        }\n    }\n    cout << sum;\n    return 0;\n}",
            "options": ["21", "15"],
            "correctIndex": 0,
            "explanation": "The code calculates the sum of all elements in the 2D array: 1 + 2 + 3 + 4 + 5 + 6 = 21."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[3][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n    cout << arr[1][2];\n    return 0;\n}",
            "options": ["6", "8"],
            "correctIndex": 0,
            "explanation": "arr[1][2] refers to the element at row 1, column 2, which is 6."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nvoid modifyArray(int arr[], int size) {\n    arr[0] = 100;\n}\n\nint main() {\n    int numbers[3] = {10, 20, 30};\n    modifyArray(numbers, 3);\n    cout << numbers[0];\n    return 0;\n}",
            "options": ["10", "100"],
            "correctIndex": 1,
            "explanation": "When an array is passed to a function, it is passed by reference (actually, a pointer to the first element is passed). So changes made to the array inside the function affect the original array. numbers[0] becomes 100."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[5] = {10, 20, 30, 40, 50};\n    for(int i = 0; i < 5; i += 2) {\n        cout << arr[i];\n    }\n    return 0;\n}",
            "options": ["103050", "102030405"],
            "correctIndex": 0,
            "explanation": "The loop iterates with i = 0, 2, 4, printing arr[0], arr[2], and arr[4], which are 10, 30, and 50."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[3][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n    for(int i = 0; i < 3; i++) {\n        cout << arr[i][i];\n    }\n    return 0;\n}",
            "options": ["159", "123"],
            "correctIndex": 0,
            "explanation": "The loop prints the diagonal elements of the 2D array: arr[0][0], arr[1][1], and arr[2][2], which are 1, 5, and 9."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[3][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n    for(int j = 0; j < 3; j++) {\n        cout << arr[0][j];\n    }\n    return 0;\n}",
            "options": ["123", "147"],
            "correctIndex": 0,
            "explanation": "The loop prints the elements of the first row: arr[0][0], arr[0][1], and arr[0][2], which are 1, 2, and 3."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[3][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n    for(int i = 0; i < 3; i++) {\n        cout << arr[i][0];\n    }\n    return 0;\n}",
            "options": ["147", "123"],
            "correctIndex": 0,
            "explanation": "The loop prints the elements of the first column: arr[0][0], arr[1][0], and arr[2][0], which are 1, 4, and 7."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[5] = {0};\n    cout << arr[3];\n    return 0;\n}",
            "options": ["0", "Garbage value"],
            "correctIndex": 0,
            "explanation": "When an array is initialized with a single value in braces, all elements are set to that value. So all elements of arr are 0, including arr[3]."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int arr[5] = {30, 10, 50, 20, 40};\n    sort(arr, arr + 5);\n    cout << arr[2];\n    return 0;\n}",
            "options": ["30", "20"],
            "correctIndex": 0,
            "explanation": "The sort function sorts the array in ascending order: {10, 20, 30, 40, 50}. So arr[2] is 30."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[5] = {10, 20, 30, 40, 50};\n    int *ptr = arr;\n    cout << *(ptr + 2);\n    return 0;\n}",
            "options": ["30", "20"],
            "correctIndex": 0,
            "explanation": "ptr points to the first element of the array. ptr + 2 points to the third element, and *(ptr + 2) is the value of that element, which is 30."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[2][2] = {{1, 2}, {3, 4}};\n    cout << *(*arr + 1);\n    return 0;\n}",
            "options": ["2", "3"],
            "correctIndex": 0,
            "explanation": "*arr is a pointer to the first row. *arr + 1 points to the second element of the first row, and *(*arr + 1) is the value of that element, which is 2."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[5] = {10, 20, 30, 40, 50};\n    cout << arr[5];\n    return 0;\n}",
            "options": ["Undefined behavior", "0"],
            "correctIndex": 0,
            "explanation": "Accessing an array element with an index that is outside the valid range (0 to 4 in this case) leads to undefined behavior. The program might crash, or it might print a garbage value."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[3][2] = {1, 2, 3, 4, 5, 6};\n    cout << arr[1][1];\n    return 0;\n}",
            "options": ["4", "2"],
            "correctIndex": 0,
            "explanation": "When a 2D array is initialized with a flat list of values, they are assigned row by row. So arr[1][1] is the element at row 1, column 1, which is 4."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[2][3] = {{1, 2, 3}, {4, 5}};\n    cout << arr[1][2];\n    return 0;\n}",
            "options": ["0", "5"],
            "correctIndex": 0,
            "explanation": "When a 2D array is partially initialized, the remaining elements are automatically initialized to 0. So arr[1][2] is 0."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[3] = {10, 20, 30};\n    int *ptr = arr;\n    ptr++;\n    cout << *ptr;\n    return 0;\n}",
            "options": ["20", "10"],
            "correctIndex": 0,
            "explanation": "ptr initially points to the first element of the array. After ptr++, it points to the second element, and *ptr is the value of that element, which is 20."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[5] = {10, 20, 30, 40, 50};\n    for(int x : arr) {\n        cout << x;\n        if(x == 30) break;\n    }\n    return 0;\n}",
            "options": ["102030", "10203040"],
            "correctIndex": 0,
            "explanation": "The range-based for loop iterates through the array elements. It prints 10, then 20, then 30, and then breaks out of the loop because x == 30 is true."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int arr[2][2][2] = {{{1, 2}, {3, 4}}, {{5, 6}, {7, 8}}};\n    cout << arr[1][0][1];\n    return 0;\n}",
            "options": ["6", "7"],
            "correctIndex": 0,
            "explanation": "arr[1][0][1] refers to the element at the second block, first row, second column, which is 6."
        },
        {
            "question": "What is the output of this code?",
            "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n    char arr[] = \"Hello\";\n    cout << arr[1];\n    return 0;\n}",
            "options": ["e", "H"],
            "correctIndex": 0,
            "explanation": "arr[1] refers to the second character of the string, which is 'e'."
        }
    ]
}